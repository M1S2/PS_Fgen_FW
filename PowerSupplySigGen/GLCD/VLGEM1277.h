/*
 * VLGEM1277.h
 *
 * Created: 25.08.2020 20:08:09
 *  Author: V17
 * see: https://www.mikrocontroller.net/attachment/409640/main_lcd_vlgem1277-01.cpp
 */ 


#ifndef VLGEM1277_H_
#define VLGEM1277_H_


#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/pgmspace.h>

/************************************************************************/
/* Definitions                                                          */
/************************************************************************/
//#define PINB_CS             (1<<2)          // PB2: CS    (LCD[/CS]: Chip-Enable, low-active)
//#define PINB_SCK            (1<<5)          // PB5: SCK   (LCD[SCL]: Serial Clock)
//#define PINB_MOSI           (1<<3)          // PB3: MOSI  (LCD[SI]: Data In)
//#define PIND_RESET          (1<<2)          // PD2: RESET (LCD[RESET]: Reset, low-active)
//#define PIND_A0             (1<<3)          // PD3: A0    (LCD[A0]: LSB of Adress Bus: 0=Commands/1=Data)

// === LCD VLGEM1277-01 (S1D15721, 240x64 4-gray display) ================
#define LCD_WIDTH           240             // Width (in pixel)
#define LCD_HEIGHT          64              // Height (in pixel)
#define LCD_FONT_WIDTH      6               // Width of Font Char
#define LCD_FONT_HEIGHT     8               // Height of Font Char
#define LCD_COLS            (LCD_WIDTH/LCD_FONT_WIDTH)
#define LCD_ROWS            (LCD_HEIGHT/LCD_FONT_HEIGHT)

// ### Commands
#define LCD_CMD_DATA_WRITE          0x1D    // Display Data Write (n-bytes)
#define LCD_CMD_PAGE_ADDR           0xB1    // Page Address Set (2 byte)
#define LCD_CMD_COL_ADDR            0x13    // Column Address Set (2 byte)
#define LCD_CMD_DISPLAY_OFFON       0xAE    // Display ON/OFF: 0=Off/1=On
#define LCD_CMD_DISPLAY_REVERSE     0xA6    // Display/Normal: 0=Normal/1=Reverse
#define LCD_CMD_DISPLAY_ALL_LIGHT   0xA4    // Display All Lighting: 0=Normal/1=All On
#define LCD_CMD_DISPLAY_START_LINE  0x8A    // Display Start Line (2/3 byte)
#define LCD_CMD_DISPLAY_MODE        0x66    // Display Mode (2 byte): 0=4 gray-scale, 1=binary
#define LCD_CMD_GRAY_SCALE_PATTERN  0x39    // Gray Scale Pattern (2 byte)
#define LCD_CMD_COM_OUT_STATUS      0xC4    // Common Output Status Select: 0=Normal/1=Reverse
#define LCD_CMD_DUTY_SET            0x6D    // Duty Set Command (3 byte)
#define LCD_CMD_BUILTIN_OSC         0xAA    // Built-in Oscillator Circuit: [0]:0=Off/1=On
#define LCD_CMD_BUILTIN_OSC_FREQ    0x5F    // Built-in Oscillator Circuit Frequency Select (2 byte)
#define LCD_CMD_PWR_CONTROL         0x25    // Power Control Set (2 byte)
#define LCD_CMD_LC_DRIVE_VOLTAGE    0x2B    // Liquid Crystal Drive Voltage Select (2 byte)
#define LCD_CMD_EL_VOLUME           0x81    // Electronic Volume Set (2 byte)
#define LCD_CMD_RESET               0xE2    // Software Reset


/************************************************************************/
/* Prototypes                                                           */
/************************************************************************/

// === LCD VLGEM1277-01 (S1D15721, 240x64 4-gray display) ================

/** 
 * Inits Module.
 */
void lcd_init();

/** 
 * Clears Display.
 */
void lcd_clear();

/** 
 * Draws ASCII Character.
 * 
 * @param gray (I) The gray level (0-3).
 * @param col (I) The column (0-39).
 * @param row (I) The row (0-7).
 */
void lcd_char(uint8_t gray, uint8_t col, uint8_t row, char chr);

/************************************************************************/
/* Data                                                                 */
/************************************************************************/

const uint8_t FONT5X7[64][6] PROGMEM = {
    {0x00,0x00,0x00,0x00,0x00,0x00},	// 0x20
    {0x00,0x00,0x06,0x5F,0x06,0x00},	// 0x21
    {0x00,0x07,0x03,0x00,0x07,0x03},	// 0x22
    {0x00,0x24,0x7E,0x24,0x7E,0x24},	// 0x23
    {0x00,0x24,0x2B,0x6A,0x12,0x00},	// 0x24
    {0x00,0x63,0x13,0x08,0x64,0x63},	// 0x25
    {0x00,0x36,0x49,0x56,0x20,0x50},	// 0x26
    {0x00,0x00,0x07,0x03,0x00,0x00},	// 0x27
    {0x00,0x00,0x3E,0x41,0x00,0x00},	// 0x28
    {0x00,0x00,0x41,0x3E,0x00,0x00},	// 0x29
    {0x00,0x08,0x3E,0x1C,0x3E,0x08},	// 0x2A
    {0x00,0x08,0x08,0x3E,0x08,0x08},	// 0x2B
    {0x00,0x00,0xE0,0x60,0x00,0x00},	// 0x2C
    {0x00,0x08,0x08,0x08,0x08,0x08},	// 0x2D
    {0x00,0x00,0x60,0x60,0x00,0x00},	// 0x2E
    {0x00,0x20,0x10,0x08,0x04,0x02},	// 0x2F
    {0x00,0x3E,0x51,0x49,0x45,0x3E},	// 0x30
    {0x00,0x00,0x42,0x7F,0x40,0x00},	// 0x31
    {0x00,0x62,0x51,0x49,0x49,0x46},	// 0x32
    {0x00,0x22,0x49,0x49,0x49,0x36},	// 0x33
    {0x00,0x18,0x14,0x12,0x7F,0x10},	// 0x34
    {0x00,0x2F,0x49,0x49,0x49,0x31},	// 0x35
    {0x00,0x3C,0x4A,0x49,0x49,0x30},	// 0x36
    {0x00,0x01,0x71,0x09,0x05,0x03},	// 0x37
    {0x00,0x36,0x49,0x49,0x49,0x36},	// 0x38
    {0x00,0x06,0x49,0x49,0x29,0x1E},	// 0x39
    {0x00,0x00,0x6C,0x6C,0x00,0x00},	// 0x3A
    {0x00,0x00,0xEC,0x6C,0x00,0x00},	// 0x3B
    {0x00,0x08,0x14,0x22,0x41,0x00},	// 0x3C
    {0x00,0x24,0x24,0x24,0x24,0x24},	// 0x3D
    {0x00,0x00,0x41,0x22,0x14,0x08},	// 0x3E
    {0x00,0x02,0x01,0x59,0x09,0x06},	// 0x3F
    {0x00,0x3E,0x41,0x5D,0x55,0x1E},	// 0x40
    {0x00,0x7E,0x11,0x11,0x11,0x7E},	// 0x41
    {0x00,0x7F,0x49,0x49,0x49,0x36},	// 0x42
    {0x00,0x3E,0x41,0x41,0x41,0x22},	// 0x43
    {0x00,0x7F,0x41,0x41,0x41,0x3E},	// 0x44
    {0x00,0x7F,0x49,0x49,0x49,0x41},	// 0x45
    {0x00,0x7F,0x09,0x09,0x09,0x01},	// 0x46
    {0x00,0x3E,0x41,0x49,0x49,0x7A},	// 0x47
    {0x00,0x7F,0x08,0x08,0x08,0x7F},	// 0x48
    {0x00,0x00,0x41,0x7F,0x41,0x00},	// 0x49
    {0x00,0x30,0x40,0x40,0x40,0x3F},	// 0x4A
    {0x00,0x7F,0x08,0x14,0x22,0x41},	// 0x4B
    {0x00,0x7F,0x40,0x40,0x40,0x40},	// 0x4C
    {0x00,0x7F,0x02,0x04,0x02,0x7F},	// 0x4D
    {0x00,0x7F,0x02,0x04,0x08,0x7F},	// 0x4E
    {0x00,0x3E,0x41,0x41,0x41,0x3E},	// 0x4F
    {0x00,0x7F,0x09,0x09,0x09,0x06},	// 0x50
    {0x00,0x3E,0x41,0x51,0x21,0x5E},	// 0x51
    {0x00,0x7F,0x09,0x09,0x19,0x66},	// 0x52
    {0x00,0x26,0x49,0x49,0x49,0x32},	// 0x53
    {0x00,0x01,0x01,0x7F,0x01,0x01},	// 0x54
    {0x00,0x3F,0x40,0x40,0x40,0x3F},	// 0x55
    {0x00,0x1F,0x20,0x40,0x20,0x1F},	// 0x56
    {0x00,0x3F,0x40,0x3C,0x40,0x3F},	// 0x57
    {0x00,0x63,0x14,0x08,0x14,0x63},	// 0x58
    {0x00,0x07,0x08,0x70,0x08,0x07},	// 0x59
    {0x00,0x71,0x49,0x45,0x43,0x00},	// 0x5A
    {0x00,0x00,0x7F,0x41,0x41,0x00},	// 0x5B
    {0x00,0x02,0x04,0x08,0x10,0x20},	// 0x5C
    {0x00,0x00,0x41,0x41,0x7F,0x00},	// 0x5D
    {0x00,0x04,0x02,0x01,0x02,0x04},	// 0x5E
    {0x80,0x80,0x80,0x80,0x80,0x80},	// 0x5F
};

#endif /* VLGEM1277_H_ */