This is a list of the planned SCPI commands. At the moment, not all commands are implemented.

It is based on https://www.envox.hr/eez/eez-bench-box-3/bb3-scpi-reference-manual/bb3-scpi-commands-summary.html

===============================================
Common
===============================================
*CLS							[OK]	Clears all status data structures
*ESE {<value>}						[OK]	Programs the Standard Event Status Enable register bits
*ESE?							[OK]	Reads the Standard Event Status Enable register bits
*ESR?							[OK]	Reads the Standard Event Status Register
*IDN?							[OK]	Returns the UNIQUE identification of the device
*OPC							[OK]	Operation Complete Command used for program synchronization
*OPC?							[OK]	Read the Operation Complete status
*RCL {<profile>}					[OK]	Recalls the device state stored in the specified storage location
*RST							[OK]	Reset device to the initial state
*SAV {<profile>}					[OK]	Stores the current device state in the specified storage location
*SRE							[OK]	Service Request Enable Command
*SRE?							[OK]	Service Request Enable Query
*STB?							[OK]	Reads the Status Byte register
*TST?							[TODO]	Returns Self-Test results
*WAI							[OK]	Waits until all pending commands are completed

===============================================
Display
===============================================
DISPlay
    [:WINDow]
        :INVerse {<bool>}				[OK]	Sets the front panel display to inverse mode
        :INVerse?					[OK]	Query the front panel display inverse mode
        [:STATe] {<bool>}				[OK]	Controls whether the whole display is visible
        [:STATe]?					[OK]	Query whether the whole display is visible

===============================================
Instrument
===============================================
INSTrument
    [:SELect] {<channel>}				[OK]	Selects the output to be programmed (CH1|CH2|CH3)
    [:SELect]?						[OK]	Query the selected output
    :CATalog?						[OK]	Returns a quoted string of the list of valid choices for the instrument channels
        :FULL?						[OK]	Returns a list of string - number pairs
    :NSELect {<channel>}				[OK]	Selects the output number to be programmed (1..3)
    :NSELect?						[OK]	Query the selected output number

===============================================
Measure
===============================================
MEASure[<channel>]
    [:SCALar]
        :CURRent
            [:DC]?					[OK]	Query the measured current on the channel
        :POWer
            [:DC]?					[OK]	Query the measured power on the channel
        [:VOLTage]
            [:DC]?					[OK]	Query the measured voltage on the channel

===============================================
Memory
===============================================
MEMory
    :NSTates?						[OK]	Returns total number of state storage memory locations

===============================================
Output
===============================================
OUTPut[<channel>]
    [:STATe] {<bool>}					[OK]	Turn on/off the specified output channel
    [:STATe]?						[OK]	Query the state of the specified output channel
    :GENeral <bool>					[OK]	Turn on/off all channels simultaneously
    :GENeral?						[OK]	Get a string with all output states

===============================================
Source
===============================================
SOURce[<channel>]
    :CURRent
        [:LEVel]
            [:IMMediate]
                [:AMPLitude] {<current>}		[OK]	Sets the output current (MINimum|MAXimum|UP|DOWN|<Current>)
                [:AMPLitude]?				[OK]	Query the output current
        :PROTection
            [:LEVel]					[OK]	Sets the over-current protection (OCP) level
            [:LEVel]?					[OK]	Query the over-current protection (OCP) level
            :STATe {<bool>}				[OK]	Enables/disables over-current protection on the selected channel
            :STATe?					[OK]	Query the state of the over-current protection on the selected channel
            :DELay {<time>}				[OK]	Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
            :DELay?					[OK]	Query the protection delay
            :TRIPped?					[OK]	Returns status of over-current protection activation
            :CLEar					[OK]	Clear the over-current protection
    :FUNCtion
        [:SHAPe]					[OK]	Selects the shape of the output signal (DC|SINusoid|SQUare|TRIangle|SAWtooth|USER)
        [:SHAPe]?					[OK]	Query the shape of the output signal
        :MODE?						[OK]	Determines which signal characteristic is being controlled. Only "VOLTage" is supported
    :FREQuency
        [:CW] {<frequency>}				[OK]	Set the frequency of a non-swept signal
        [:CW]?						[OK]	Query the frequency of a non-swept signal
    :POWer
        :PROTection
            [:LEVel]					[OK]	Sets the over-power protection (OPP) level
            [:LEVel]?					[OK]	Query the over-power protection (OPP) level
            :STATe {<bool>}				[OK]	Enables/disables over-power protection on the selected channel
            :STATe?					[OK]	Query the state of the over-power protection on the selected channel
            :DELay {<time>}				[OK]	Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
            :DELay?					[OK]	Query the protection delay
            :TRIPped?					[OK]	Returns status of over-power protection activation
            :CLEar					[OK]	Clear the over-power protection
    :VOLTage
        [:LEVel]
            [:IMMediate]
                [:AMPLitude] {<voltage>}		[OK]	Sets the output amplitude (MINimum|MAXimum|UP|DOWN|<Voltage>)
                [:AMPLitude]?				[OK]	Query the output amplitude
                :OFFSet {<voltage>}			[OK]	Sets the output offset (non-time varying component of the signal) (MINimum|MAXimum|UP|DOWN|<Voltage>)
                :OFFSet?				[OK]	Query the output offset
        :PROTection
            [:LEVel]					[OK]	Sets the over-voltage protection (OVP) level
            [:LEVel]?					[OK]	Query the over-voltage protection (OVP) level
            :STATe {<bool>}				[OK]	Enables/disables over-voltage protection on the selected channel
            :STATe?					[OK]	Query the state of the over-voltage protection on the selected channel
            :DELay {<time>}				[OK]	Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
            :DELay?					[OK]	Query the protection delay
            :TRIPped?					[OK]	Returns status of over-voltage protection activation
            :CLEar					[OK]	Reset the OVP state of the channel

===============================================
Status
===============================================
STATus
    :OPERation
        [:EVENt]?					[TODO]	Returns the value of the Operation Event register
        :CONDition?					[TODO]	Returns the value of the Operation Instrument Condition register
        :ENABle {<value>}				[TODO]	Enables specific bits in the Operation Event register

        :INSTrument[<n>]
            [:EVENt]?					[TODO]	Returns the value of the Operation Instrument Event register
            :CONDition?					[TODO]	Returns the value of the Operation Instrument Condition register
            :ENABle {<value>}				[TODO]	Enables specific bits in the Operation Instrument Event register
            :ISUMmary<n>
                [:EVENt]?				[TODO]	Returns the value of the Operation Instrument Isummary Event register
                :CONDition?				[TODO]	Returns the value of the Operation Instrument Isummary Condition register
                :ENABle {<value>}			[TODO]	Enables specific bits in the Operation Instrument Isummary Event register
    :PREset						[OK]	Presets all enable registers to power-on state
    :QUEStionable
        [:EVENt]?					[OK]	Returns the value of the Questionable Event register
        :CONDition?					[TODO]	Returns the value of the Questionable Condition register
        :ENABle {<value>}				[OK]	Enables specific bits in the Questionable Event register

        :INSTrument[<n>]
            [:EVENt]?					[TODO]	Returns the value of the Questionable Instrument Event register
            :CONDition?					[TODO]	Returns the value of the Questionable Instrument Condition register
            :ENABle {<value>}				[TODO]	Enables specific bits in the Questionable Instrument Event register
            :ISUMmary<n>
                [:EVENt]?				[TODO]	Returns the value of the Questionable Instrument Isummary Event register
                :CONDition?				[TODO]	Returns the value of the Questionable Instrument Isummary Condition register
                :ENABle {<value>}			[TODO]	Enables specific bits in the Questionable Instrument Isummary Event register

===============================================
System
===============================================
SYSTem
    :CAPability?					[OK]	Returns an <instrument_specifier>: "(DCPSUPPLY WITH MEASURE|FUNCGEN|FUNCGEN)"
    :CHANnel
        [:COUNt]?					[OK]	Returns the number of output channels
    :COMMunicate
        :SERial
            :BAUD <baudRate>				[OK]	Set the serial baud rate (allowed values "B110", "B150", "B300", "B1200", "B2400", "B4800", "B9600", "B19200", "B38400", "B57600")
            :BAUD?					[OK]	Query the serial baud rate
            :ECHO <bool>				[OK]	Enable/disalbe the serial echo
            :ECHO?					[OK]	Query the state of the serial echo
    :CPU
        :FIRMware?					[OK]	Returns device firmware version
        :INFOrmation
            :TYPE?					[OK]	Returns the type of CPU
        :SNO?						[OK]	Returns the device serial number
        :VERSion?					[OK]	Returns the CPU board version number
    :ERRor
        [:NEXT]?					[OK]	Queries and clears errors from the error queue
        :COUNt?						[OK]	Queries the error/event queue for the number of unread items
    :LOCal						[OK]	Places the device in the local mode
    :MEASure
        [:SCALar]
            [:VOLTage]
                [:DC]?					[OK]	Query all system ATX voltages (<ATX_3V3>,<ATX_5V>,<ATX_12V>,<ATX_12V_NEG>) 
    :PON:OUTPut:DISable {<bool>}			[OK]	Sets output state on power up
    :REMote						[OK]	Places the device in the remote mode
    :RWLock						[OK]	Places the device in the remote mode and disables front panel [lock/unlock] icon
    :VERSion?						[OK]	Returns the SCPI version number