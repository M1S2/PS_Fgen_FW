/*! @page pagescpiinterface SCPI Interface
The device supports SCPI (Standard Commands for Programmable Instruments) commands that can be used for remote control. All commands are received via the USB input (serial port).

The following parser is used to decode all incoming SCPI commands: 

[GitHub - j123b567/scpi-parser: Open Source SCPI device library](https://github.com/j123b567/scpi-parser)

The following list gives an overview of the implemented (and planned) SCPI commands. It is inspired by [SCPI commands summary – EEZ – Envox Experimental Zone](https://www.envox.eu/eez-bench-box-3/bb3-scpi-reference-manual/bb3-scpi-commands-summary/)

Try out sending one of the following commands to the device by simply opening a COM port and writing the characters. A good command for testing the connection and parser is "*IDN?" which returns some details about the device.

@section ui_scpi_common_sec Common
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
*CLS						| OK 		| Clears all status data structures
*ESE {\<value\>}				| OK 		| Programs the Standard Event Status Enable register bits
*ESE?						| OK		| Reads the Standard Event Status Enable register bits
*ESR?						| OK		| Reads the Standard Event Status Register
*IDN?						| OK		| Returns the UNIQUE identification of the device
*OPC						| OK		| Operation Complete Command used for program synchronization
*OPC?						| OK		| Read the Operation Complete status
*RCL {\<profile\>}				| OK		| Recalls the device state stored in the specified storage location
*RST						| OK		| Reset device to the initial state
*SAV {\<profile\>}				| OK		| Stores the current device state in the specified storage location
*SRE						| OK		| Service Request Enable Command
*SRE?						| OK		| Service Request Enable Query
*STB?						| OK		| Reads the Status Byte register
*TST?						| TODO		| Returns Self-Test results
*WAI						| OK		| Waits until all pending commands are completed

@section ui_scpi_display_sec Display
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
DISPlay[:WINDow]:INVerse {\<bool\>}		| OK 		| Sets the front panel display to inverse mode
DISPlay[:WINDow]:INVerse? 			| OK 		| Query the front panel display inverse mode
DISPlay[:WINDow][:STATe] {\<bool\>}		| OK 		| Controls whether the whole display is visible
DISPlay[:WINDow][:STATe]?			| OK 		| Query whether the whole display is visible

@section ui_scpi_instrument_sec Instrument
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
INSTrument[:SELect] {\<channel\>}		| OK		| Selects the output to be programmed (CH1\|CH2\|CH3)
INSTrument[:SELect]?				| OK		| Query the selected output
INSTrument:CATalog?				| OK		| Returns a quoted string of the list of valid choices for the instrument channels
INSTrument:CATalog:FULL?			| OK		| Returns a list of string - number pairs
INSTrument:NSELect {\<channel\>}		| OK		| Selects the output number to be programmed (1..3)
INSTrument:NSELect?				| OK		| Query the selected output number

@section ui_scpi_measure_sec Measure
Command						| Status	| Description
----------------------------------------------- | -------------	| ---------------
MEASure[\<channel\>][:SCALar][:VOLTage][:DC]?	| OK		| Query the measured voltage on the channel
MEASure[\<channel\>][:SCALar]:CURRent[:DC]?	| OK		| Query the measured current on the channel
MEASure[\<channel\>][:SCALar]:POWer[:DC]?	| OK		| Query the measured power on the channel

@section ui_scpi_memory_sec Memory
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
MEMory:NSTates?					| OK		| Returns total number of state storage memory locations

@section ui_scpi_output_sec Output
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
OUTPut[\<channel\>][:STATe] {\<bool\>}		| OK		| Turn on/off the specified output channel
OUTPut[\<channel\>][:STATe]?			| OK		| Query the state of the specified output channel
OUTPut[\<channel\>]:GENeral \<bool\>		| OK		| Turn on/off all channels simultaneously
OUTPut[\<channel\>]:GENeral?			| OK		| Get a string with all output states

@section ui_scpi_source_sec Source
Command										| Status	| Description
-------------------------------------------------------------------------------	| -------------	| ---------------
SOURce[\<channel\>]:CURRent[:LEVel][:IMMediate][:AMPLitude] {\<current\>}	| OK		| Sets the output current (MINimum\|MAXimum\|UP\|DOWN\|\<Current\>)
SOURce[\<channel\>]:CURRent[:LEVel][:IMMediate][:AMPLitude]?			| OK		| Query the output current
SOURce[\<channel\>]:CURRent:PROTection[:LEVel]					| OK		| Sets the over-current protection (OCP) level
SOURce[\<channel\>]:CURRent:PROTection[:LEVel]?					| OK		| Query the over-current protection (OCP) level
SOURce[\<channel\>]:CURRent:PROTection:STATe {\<bool\>}				| OK 		| Enables/disables over-current protection on the selected channel
SOURce[\<channel\>]:CURRent:PROTection:STATe?					| OK		| Query the state of the over-current protection on the selected channel
SOURce[\<channel\>]:CURRent:PROTection:DELay {\<time\>}				| OK		| Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
SOURce[\<channel\>]:CURRent:PROTection:DELay?					| OK		| Query the protection delay
SOURce[\<channel\>]:CURRent:PROTection:TRIPped?					| OK		| Returns status of over-current protection activation
SOURce[\<channel\>]:CURRent:PROTection:CLEar					| OK		| Clear the over-current protection
SOURce[\<channel\>]:FUNCtion[:SHAPe]						| OK		| Selects the shape of the output signal (DC\|SINusoid\|SQUare\|TRIangle\|SAWtooth\|USER)
SOURce[\<channel\>]:FUNCtion[:SHAPe]?						| OK		| Query the shape of the output signal
SOURce[\<channel\>]:FUNCtion:MODE?						| OK		| Determines which signal characteristic is being controlled. Only "VOLTage" is supported
SOURce[\<channel\>]:FUNCtion:DATa #\<NumBytesDigits\>\<NumBytes\>\<Bytes\>	| OK		| Set the user defined waveform data of the channel. Only used if SHAPe is set to USER 
SOURce[\<channel\>]:FREQuency[:CW] {\<frequency\>}				| OK		| Set the frequency of a non-swept signal
SOURce[\<channel\>]:FREQuency[:CW]?						| OK		| Query the frequency of a non-swept signal
SOURce[\<channel\>]:POWer:PROTection[:LEVel]					| OK		| Sets the over-power protection (OPP) level
SOURce[\<channel\>]:POWer:PROTection[:LEVel]?					| OK		| Query the over-power protection (OPP) level
SOURce[\<channel\>]:POWer:PROTection:STATe {\<bool\>}				| OK		| Enables/disables over-power protection on the selected channel
SOURce[\<channel\>]:POWer:PROTection:STATe?					| OK		| Query the state of the over-power protection on the selected channel
SOURce[\<channel\>]:POWer:PROTection:DELay {\<time\>}				| OK		| Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
SOURce[\<channel\>]:POWer:PROTection:DELay?					| OK		| Query the protection delay
SOURce[\<channel\>]:POWer:PROTection:TRIPped?					| OK		| Returns status of over-power protection activation
SOURce[\<channel\>]:POWer:PROTection:CLEar					| OK		| Clear the over-power protection
SOURce[\<channel\>]:VOLTage[:LEVel][:IMMediate][:AMPLitude] {\<voltage\>}	| OK		| Sets the output amplitude (MINimum\|MAXimum\|UP\|DOWN\|\<Voltage\>)
SOURce[\<channel\>]:VOLTage[:LEVel][:IMMediate][:AMPLitude]?			| OK		| Query the output amplitude
SOURce[\<channel\>]:VOLTage[:LEVel][:IMMediate]:OFFSet {\<voltage\>}		| OK		| Sets the output offset (non-time varying component of the signal) (MINimum\|MAXimum\|UP\|DOWN\|\<Voltage\>)
SOURce[\<channel\>]:VOLTage[:LEVel][:IMMediate]:OFFSet?				| OK		| Query the output offset
SOURce[\<channel\>]:VOLTage:PROTection[:LEVel]					| OK		| Sets the over-voltage protection (OVP) level
SOURce[\<channel\>]:VOLTage:PROTection[:LEVel]?					| OK		| Query the over-voltage protection (OVP) level
SOURce[\<channel\>]:VOLTage:PROTection:STATe {\<bool\>}				| OK		| Enables/disables over-voltage protection on the selected channel
SOURce[\<channel\>]:VOLTage:PROTection:STATe?					| OK		| Query the state of the over-voltage protection on the selected channel
SOURce[\<channel\>]:VOLTage:PROTection:DELay {\<time\>}				| OK		| Protection function will not be triggered during the delay time. After the delay time has expired, the protection function will be active.
SOURce[\<channel\>]:VOLTage:PROTection:DELay?					| OK		| Query the protection delay
SOURce[\<channel\>]:VOLTage:PROTection:TRIPped?					| OK		| Returns status of over-voltage protection activation
SOURce[\<channel\>]:VOLTage:PROTection:CLEar					| OK		| Reset the OVP state of the channel

@section ui_scpi_status_sec Status
Command									| Status	| Description
-----------------------------------------------------------------------	| -------------	| ---------------
STATus:OPERation[:EVENt]?						| TODO		| Returns the value of the Operation Event register
STATus:OPERation:CONDition?						| TODO		| Returns the value of the Operation Instrument Condition register
STATus:OPERation:ENABle {\<value\>}					| TODO		| Enables specific bits in the Operation Event register
STATus:OPERation:INSTrument[\<n\>][:EVENt]?				| TODO		| Returns the value of the Operation Instrument Event register
STATus:OPERation:INSTrument[\<n\>]:CONDition?				| TODO		| Returns the value of the Operation Instrument Condition register
STATus:OPERation:INSTrument[\<n\>]:ENABle {\<value\>}			| TODO		| Enables specific bits in the Operation Instrument Event register
STATus:OPERation:INSTrument[\<n\>]:ISUMmary\<n\>[:EVENt]?		| TODO		| Returns the value of the Operation Instrument Isummary Event register
STATus:OPERation:INSTrument[\<n\>]:ISUMmary\<n\>:CONDition?		| TODO		| Returns the value of the Operation Instrument Isummary Condition register
STATus:OPERation:INSTrument[\<n\>]:ISUMmary\<n\>:ENABle {\<value\>}	| TODO		| Enables specific bits in the Operation Instrument Isummary Event register
STATus:PREset								| OK		| Presets all enable registers to power-on state
STATus:QUEStionable[:EVENt]?						| OK		| Returns the value of the Questionable Event register
STATus:QUEStionable:CONDition?						| TODO		| Returns the value of the Questionable Condition register
STATus:QUEStionable:ENABle {\<value\>}					| OK		| Enables specific bits in the Questionable Event register
STATus:QUEStionable:INSTrument[\<n\>][:EVENt]?				| TODO		| Returns the value of the Questionable Instrument Event register
STATus:QUEStionable:INSTrument[\<n\>]:CONDition?			| TODO		| Returns the value of the Questionable Instrument Condition register
STATus:QUEStionable:INSTrument[\<n\>]:ENABle {\<value\>}		| TODO		| Enables specific bits in the Questionable Instrument Event register
STATus:QUEStionable:INSTrument[\<n\>]:ISUMmary\<n\>[:EVENt]?		| TODO		| Returns the value of the Questionable Instrument Isummary Event register
STATus:QUEStionable:INSTrument[\<n\>]:ISUMmary\<n\>:CONDition?		| TODO		| Returns the value of the Questionable Instrument Isummary Condition register
STATus:QUEStionable:INSTrument[\<n\>]:ISUMmary\<n\>:ENABle {\<value\>}	| TODO		| Enables specific bits in the Questionable Instrument Isummary Event register

@section ui_scpi_system_sec System
Command						| Status	| Description
-----------------------------------------------	| -------------	| ---------------
SYSTem:CAPability?				| OK		| Returns an \<instrument_specifier\>: "(DCPSUPPLY WITH MEASURE\|FUNCGEN\|FUNCGEN)"
SYSTem:CHANnel[:COUNt]?				| OK		| Returns the number of output channels
SYSTem:COMMunicate:SERial:BAUD \<baudRate\>	| OK		| Set the serial baud rate (allowed values "B110", "B150", "B300", "B1200", "B2400", "B4800", "B9600", "B19200", "B38400", "B57600")
SYSTem:COMMunicate:SERial:BAUD?			| OK		| Query the serial baud rate
SYSTem:COMMunicate:SERial:ECHO \<bool\>		| OK		| Enable/disalbe the serial echo
SYSTem:COMMunicate:SERial:ECHO?			| OK		| Query the state of the serial echo
SYSTem:CPU:FIRMware?				| OK		| Returns device firmware version
SYSTem:CPU:INFOrmation:TYPE?			| OK		| Returns the type of CPU
SYSTem:CPU:SNO?					| OK		| Returns the device serial number
SYSTem:CPU:VERSion?				| OK		| Returns the CPU board version number
SYSTem:ERRor[:NEXT]?				| OK		| Queries and clears errors from the error queue
SYSTem:ERRor:COUNt?				| OK		| Queries the error/event queue for the number of unread items
SYSTem:LOCal					| OK		| Places the device in the local mode
SYSTem:MEASure[:SCALar][:VOLTage][:DC]?		| OK		| Query all system ATX voltages (\<ATX_3V3\>,\<ATX_5V\>,\<ATX_12V\>,\<ATX_12V_NEG\>) 
SYSTem:PON:OUTPut:DISable {\<bool\>}		| OK		| Sets output state on power up
SYSTem:REMote					| OK		| Places the device in the remote mode
SYSTem:RWLock					| OK		| Places the device in the remote mode and disables front panel [lock/unlock] icon
SYSTem:VERSion?					| OK		| Returns the SCPI version number

 */